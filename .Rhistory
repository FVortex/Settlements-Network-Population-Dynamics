# Дополним точечный слой данными о принадлежности к кластерам
settlements_2002@data %>%
mutate(clust_18 = clust_18_2002) -> settlements_2002@data
# Строим карту с 18 кластерами (2002)
ggplot()+
geom_sf(data=st_as_sf(rayons), fill = "white", col = "grey")+
geom_sf(data = st_as_sf(region), fill = "white", alpha = 0.1)+
# geom_sf(data = st_as_sf(roads_fixed), col = "grey", lwd = 0.3)+
# geom_sf(data = st_as_sf(rivers), col = "steelblue", lwd = 1)+
geom_sf(data = st_as_sf(settlements_2002),
aes(size = Census2002, col = factor(clust_18)), alpha = 0.6, show.legend = F)+
# scale_color_viridis_d(alpha = 0.7)+
scale_size_continuous(trans = "sqrt", range = c(0.4, 4))+
theme_minimal()
# Чтобы добавить номер кластера на карту, вычислим расопложение географического центра
# для каждого кластера
settlements_2002@data %>%
mutate(x = coordinates(settlements_2002)[,1],
y = coordinates(settlements_2002)[,2]) %>%
group_by(clust_18) %>% summarise(x_mean = mean(x), y_mean = mean(y)) -> cluster_notations
# Построим обновленную карту
cluster_18_2002_plot <- ggplot()+
geom_sf(data=st_as_sf(rayons), fill = "white", col = "grey")+
geom_sf(data = st_as_sf(region), fill = "white", alpha = 0.1)+
geom_sf(data = st_as_sf(settlements_2002),
aes(size = Census2002, col = factor(clust_18)), alpha = 0.6, show.legend = F)+
scale_size_continuous(trans = "sqrt", range = c(0.6, 6))+
geom_text(data = cluster_notations,
aes(label = clust_18, x = x_mean, y = y_mean), show.legend = F)+
theme_minimal()+
theme(axis.title = element_blank())
cluster_18_2002_plot
library(sp)
library(sf)
library(raster)
library(rgdal)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(igraph)
library(leaflet)
library(RColorBrewer)
library(tidyr)
library(scales)
library(ggdendro)   # визуализация дендрограмм
library(viridis)
# load the data
# load the data
load("data/Part1_output.RData")
# d_1990 <- as.dist(dist_matrix_1990, diag = F)
d_2002 <- as.dist(dist_matrix_2002, diag = F)
d_2010 <- as.dist(dist_matrix_2010, diag = F)
fit_2002 <- hclust(d_2002, method="ward.D")
fit_2010 <- hclust(d_2010, method="ward.D")
# Сut tree into 3 and 6 clusters
# clust_3_1990 <- cutree(fit_1990, k=3)
clust_3_2002 <- cutree(fit_2002, k=3)
clust_6_2002 <- cutree(fit_2002, k=6)
# Дополним точечный слой данными о принадлежности к кластерам
settlements_2002@data %>%
mutate(clust_3 = clust_3_2002,
clust_6 = clust_6_2002) -> settlements_2002@data
clust_18_2002 <- cutree(fit_2002, k = 18)
# Дополним точечный слой данными о принадлежности к кластерам
settlements_2002@data %>%
mutate(clust_18 = clust_18_2002) -> settlements_2002@data
# Сохраним данные в новую переменную и очистим от лишних столбцов
df <- settlements_2002@data
df %>%
select(-cohort1981, -cohort1990, -cohort2002,
-trend_1981to1990, -trend_1990to2002,
-rel1981to1990, -rel1990to2002, -rel2002to2010) -> df
df %>%
group_by(clust_18) %>%
mutate(pop2002 = sum(Census2002), pop2010 = sum(Census2010),
pop2010to2002_rel = pop2010/pop2002*100,         # отношение населения в 2010 году к населению в 2002
max_pop = max(Census2002),                       # величина крупнешего н.п.
mean_pop = mean(Census2002),                     # средний размер н.п.
median_pop = median(Census2002),                 # медианный размер н.п.
sum_pop = sum(Census2002)) %>%                   # сумма населения кластера
select(clust_6, clust_18, pop2002, pop2010, pop2010to2002_rel, mean_pop,median_pop, max_pop, sum_pop) %>%
unique() -> clusters_18_metrics                         # Сохраним результат в новый data.frame
# Создадим переменные
clusters_18_metrics$variation_2002 <- NA_real_
clusters_18_metrics$variation_2010 <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset observations by the cluster
select_condition <- clust_18_2002 == i
settlements_temp <- df[select_condition,]
# Calculate variation (standart deviation(x)/mean(x))
# 2002
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$variation_2002 <-
sd(settlements_temp$Census2002, na.rm = T)/mean(settlements_temp$Census2002, na.rm = T)
# 2010
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$variation_2010 <-
sd(settlements_temp$Census2010, na.rm = T)/mean(settlements_temp$Census2010, na.rm = T)
}
# Calculate the difference in variance between 2002 and 2010 (темпы сжатия расселения)
clusters_18_metrics %>%
mutate(variation_dif = variation_2010/variation_2002*100) ->
clusters_18_metrics
# Создадим переменные
clusters_18_metrics$density <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
# Subset graph
# Extract the verticies
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
# Calculate edge_density
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$density <- edge_density(temp_graph)
}
plot(simplify(temp_graph), vertex.size=1)
library(CINNA)
?calculate_centralities
temp_graph
i <- 1
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
plot(simplify(temp_graph), vertex.size=1)
calculate_centralities(simplify(temp_graph), include = pr_cent[1:5])%>%
pca_centralities(scale.unit = TRUE)
pr_cent<-proper_centralities(res_graph_2002)
calculate_centralities(simplify(temp_graph), include = pr_cent[1:5])%>%
pca_centralities(scale.unit = TRUE)
visualize_graph(simplify(temp_graph), centrality.type = "subgraph centrality scores")
plot(simplify(temp_graph), vertex.size=1)
centr_clo(temp_graph)
# Создадим переменные
clusters_18_metrics$centralization <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
# Subset graph
# Extract the verticies
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
# Calculate edge_density
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$centralization <- centr_clo(temp_graph)$centralization
}
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_dif))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = density))+
geom_point(aes(size = mean_pop))
# Создадим переменные
clusters_18_metrics$centralization <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
# Subset graph
# Extract the verticies
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
# Calculate edge_density
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$centralization <- centr_betw(temp_graph)$centralization
}
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_dif))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = density))+
geom_point(aes(size = mean_pop))
# Создадим переменные
clusters_18_metrics$centralization <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
# Subset graph
# Extract the verticies
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
# Calculate edge_density
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$centralization <- centr_degree(temp_graph)$centralization
}
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_dif))+
geom_point(aes(size = mean_pop))
# Создадим переменные
clusters_18_metrics$centralization <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
# Subset graph
# Extract the verticies
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
# Calculate edge_density
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$centralization <- centr_eigen(temp_graph)$centralization
}
plot(simplify(temp_graph), vertex.size=1)
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_dif))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_dif))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = density))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = tmax))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop_max))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = max_pop))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = mean_pop))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = mean_pop))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = median_pop))+
geom_point(aes(size = mean_pop))
# Создадим переменные
clusters_18_metrics$centralization <- NA_real_
for (i in 1:nrow(clusters_18_metrics)) {
# Define logical vector to subset settlements by the cluster
select_condition <- clust_18_2002 == i
# Subset graph
# Extract the verticies
temp_verticies <- shortest_paths(res_graph_2002, from = settl_index_2002[select_condition],
to = settl_index_2002[select_condition]) %>% .$vpath %>% unlist()
# Create subgraph
temp_graph <- induced_subgraph(res_graph_2002, vids = temp_verticies) %>%
simplify()
# Calculate edge_density
clusters_18_metrics[clusters_18_metrics$clust_18 == i,]$centralization <- centr_betw(temp_graph)$centralization
}
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_dif))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = median_pop))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = mean_pop))+
geom_point(aes(size = mean_pop))
pr_cent<-proper_centralities(simplify(temp_graph))
calculate_centralities(simplify(temp_graph))%>%
pca_centralities(scale.unit = TRUE)
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.005,label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001,label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 1, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 0.5, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = mean_pop))+
geom_point()
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_dif))+
geom_point(aes(size = mean_pop))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_dif))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001, y = variation_dif - 0.5, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_dif))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001, y = variation_dif - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_dif))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = variation_dif - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_dif))+
geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = variation_dif - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 0.5, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_smooth()+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 0.5, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = variation_dif))+
geom_smooth()+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 0.5, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = pop2010to2002_rel))+
geom_point(aes(size = mean_pop))+
geom_smooth()+
geom_text(aes(x = density + 0.001, y = pop2010to2002_rel - 0.5, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_2002))+
geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = variation_dif - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_2002))+
geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = variation_2002 - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = density, y = variation_2002))+
# geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = variation_2002 - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_2002))+
# geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = variation_2002 - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_2002))+
# geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = density + 0.0005, y = centralization - 0.2, label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_2002))+
# geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = centralization - 0.2, y = density + 0.0005,  label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_2002))+
# geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = centralization, y = variation_2002,  label = clust_18))
clusters_18_metrics %>%
ggplot(aes(x = centralization, y = variation_2002))+
# geom_smooth()+
geom_point(aes(size = mean_pop))+
geom_text(aes(x = centralization+0.002, y = variation_2002 - 0.1,  label = clust_18))
library(sp)
library(sf)
library(raster)
library(rgdal)
library(dplyr)
library(ggplot2)
library(gridExtra)
library(shp2graph)
library(igraph)
library(leaflet)
library(RColorBrewer)
library(tidyr)
library(scales)
library(ggdendro)   # визуализация дендрограмм (кластерный анализ)
load("data/Part1_output.RData")
# Define function to repeat rows
rep.row <-function(x,n){
matrix(rep(x,each=n),nrow=n)
}
rep.col <-function(x,n){
matrix(rep(x,each=n),ncol=n)
}
# Create matrices of population sizes
pop_1990_matrix <- rep.row(settlements_1990$Rosstat1990/max(settlements_1990$Rosstat1990), nrow(dist_matrix_1990))
pop_2002_matrix <- rep.row(settlements_2002$Census2002/max(settlements_2002$Census2002), nrow(dist_matrix_2002))
pop_2010_matrix <- rep.row(settlements_2010$Census2010/max(settlements_2010$Census2010), nrow(dist_matrix_2010))
# Calculate distance matrices, weightened by population (_w)
dist_matrix_1990_w <- dist_matrix_1990 * pop_1990_matrix
dist_matrix_2002_w <- dist_matrix_2002 * pop_2002_matrix
dist_matrix_2010_w <- dist_matrix_2010 * pop_2010_matrix
closeness_1990_w <- 1/(dist_matrix_1990_w %>% apply(1, sum))
closeness_2002_w <- 1/(dist_matrix_2002_w %>% apply(1, sum))
closeness_2010_w <- 1/(dist_matrix_2010_w %>% apply(1, sum))
ggplot()+
geom_boxplot(data = data_frame(x = settlements_2002$trend_2002to2010, y = closeness_2002_w),
aes(x = x, y = y))+
scale_x_discrete(name = "тренд")+
scale_y_continuous(name = "Взвешенная по численности населения Closeness Centrality")+
theme(axis.text.x = element_text(size = 14))
# То е самое, но в виде гистограммы
ggplot()+
geom_histogram(data = data_frame(fill = settlements_2002$trend_2002to2010, x = closeness_2002_w),
aes(x = x, fill = fill), position = "identity", alpha = 0.7)
# В виде scatter plot
ggplot()+
geom_point(data = data_frame(y = settlements_2002$rel2002to2010, x = closeness_2002_w),
aes(x = x, y = y), alpha = 0.7)
# В виде scatter plot
ggplot()+
geom_point(data = data_frame(y = settlements_2002$rel2002to2010, x = closeness_2002_w),
aes(x = x, y = y), alpha = 0.7)+
geom_smooth()
# В виде scatter plot
ggplot(data = data_frame(y = settlements_2002$rel2002to2010, x = closeness_2002_w),
aes(x = x, y = y))+
geom_point(alpha = 0.7)+
geom_smooth()
# В виде scatter plot
ggplot(data = data_frame(y = settlements_2002$rel2002to2010, x = closeness_2002_w),
aes(x = x, y = y))+
geom_point(alpha = 0.7)+
geom_smooth(method = "glm")
# В виде scatter plot - есть явный линейный тренд (!): чем ближе поселение к центру тяжести сети,
# тем выше его динамика населения
ggplot(data = data_frame(y = settlements_2002$rel2002to2010, x = closeness_2002_w),
aes(x = x, y = y))+
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
ggplot(data = data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w),
aes(x = x, y = y))+
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
ggplot(data = data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w),
aes(x = x, y = y))+
filter(y < 1000) %>%
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w) %>%
filter(y < 1000) %>%
ggplot(aes(x = x, y = y))+
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
data_frame(y = settlements_1981$rel1981to1990, x = closeness_1981_w) %>%
filter(y < 1000) %>%
ggplot(aes(x = x, y = y))+
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w) %>%
filter(y < 1000) %>%
ggplot(aes(x = x, y = y))+
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w) %>%
filter(y < 600) %>%
ggplot(aes(x = x, y = y))+
geom_point(alpha = 0.6)+
geom_smooth(method = "glm")
data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w, size = settlements_1990$Rosstat1990) %>%
filter(y < 600) %>%
ggplot(aes(x = x, y = y))+
geom_point(aes(size = size), alpha = 0.6)+
geom_smooth(method = "glm")
data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w, size = settlements_1990$Rosstat1990) %>%
# filter(y < 600) %>%
ggplot(aes(x = x, y = y))+
geom_point(aes(size = size), alpha = 0.6)+
geom_smooth(method = "glm")+
scale_y_continuous(trans = "log")
data_frame(y = settlements_1990$rel1990to2002, x = closeness_1990_w, size = settlements_1990$Rosstat1990) %>%
filter(y < 600) %>%
ggplot(aes(x = x, y = y))+
geom_point(aes(size = size), alpha = 0.6)+
geom_smooth(method = "glm")
# В виде scatter plot - есть явный линейный тренд (!):
# чем ближе поселение к центру тяжести сети,
# тем выше его динамика населения
ggplot(data = data_frame(y = settlements_2002$rel2002to2010, x = closeness_2002_w,
size = settlements_2002$Census2002),
aes(x = x, y = y))+
geom_point(aes(size = size), alpha = 0.6)+
geom_smooth(method = "glm")
